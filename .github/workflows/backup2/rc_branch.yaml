name: Workflow for 'rc*' branch

# When someone comment "/deploy" on anyone PR,
# this workflow will be triggered and run.
on:
  push:
    branches:
      - 'rc/*'
      
env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
  CKB_CLI_VERSION: v0.40.0    
jobs:  
  checkout: 
    name: ckb-checkout  
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        -  Linux-runner
        -  mac-runner
    steps:
    - name: Set env
      run: echo "CARGO_TARGET_DIR=$(echo $HOME/target)" >> $GITHUB_ENV
    - uses: actions/checkout@v2
      with:
        submodules: false
        fetch-depth: 2
        branch: develop
  Benchmarks_Test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        -  Linux-runner
        -  mac-runner
    needs: checkout
    steps: 
    - name: Set env
      run: echo "CARGO_TARGET_DIR=$(echo $HOME/target)" >> $GITHUB_ENV
    - name: Benchmarks_Test
      run: |
        if [ ${{ runner.os }} == "macOS" ]; then
        export PATH="/Users/administrator/.cargo/bin:$PATH"
        fi
        make bench-test
  Integration_Test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        -  Linux-runner
        -  mac-runner
    needs: Benchmarks_Test
    steps: 
    - name: Set env
      run: echo "CARGO_TARGET_DIR=$(echo $HOME/target)" >> $GITHUB_ENV
    - name: Integration_Test
      run: |
        if [ ${{ runner.os }} == "macOS" ]; then
        export PATH="/Users/administrator/.cargo/bin:$PATH"
        fi
        make CKB_TEST_ARGS="-c 1 --no-report" integration
  Code_Coverage:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
        -  Linux-runner
        -  mac-runner
    needs: Integration_Test
    steps: 
    - name: Set env
      run: echo "CARGO_TARGET_DIR=$(echo $HOME/target)" >> $GITHUB_ENV
    - name: Code Coverage
      run: |
        if [ ${{ runner.os }} == "macOS" ]; then
        export PATH="/Users/administrator/.cargo/bin:$PATH"
        fi
        cargo tarpaulin --version || cargo install cargo-tarpaulin --locked
        if make cov; then bash <(curl -s https://codecov.io/bash); fi
      env: 
        CACHE_NAME: tarpaulin

        

 


